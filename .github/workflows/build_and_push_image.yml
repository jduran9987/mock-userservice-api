name: Build And Push Image

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: mock-userservice-api

jobs:
  build-and-push-image:
    runs-on: ubuntu-24.04
  
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Generate image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=short
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ 
          github.event_name == 'pull_request' 
          ? format('{0}/dev-{1}:PR-{2}', steps.login-ecr.outputs.registry, env.ECR_REPOSITORY, github.event.pull_request.number) 
          : steps.meta.outputs.tags 
        }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
